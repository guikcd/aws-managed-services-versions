name: deploy to lambda
on:
  push:
    branches-ignore:
      - 'main'
jobs:

  build-deploy:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - name: checkout source code
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}

      - name: Build zip
        run: |
          mkdir lambda && \
            cp generate.py index.template.html __init__.py lambda/ && \
            pip install --target ./lambda -r requirements.txt && \
            cd lambda && zip -r ../lambda.zip . && \
            ls -lh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{secrets.AWS_ROLE_TO_ASSUME}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: put zip on S3
        run: |
          aws s3 cp ./lambda.zip s3://${{secrets.AWS_S3_BUCKET}}/

      - name: default deploy
        run: |
          aws lambda update-function-code \
            --function-name aws-managed-services-versions-fetch \
            --s3-bucket ${{secrets.AWS_S3_BUCKET}} \
            --s3-key lambda.zip

      - name: Invoke Lambda
        run: |
          aws lambda invoke \
            --cli-binary-format raw-in-base64-out \
            --function-name aws-managed-services-versions-fetch \
            --invocation-type Event \
            --payload '{ "output_file": "index2.html" }' \
            response.json
